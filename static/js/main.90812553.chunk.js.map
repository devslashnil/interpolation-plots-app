{"version":3,"sources":["components/SplineGraph/splineFuncs.ts","components/LagrangeGraph/lagrangeFuncs.ts","components/LagrangeGraph/index.tsx","components/NewtonGraph/newtonFuncs.ts","components/NewtonGraph/index.tsx","components/SplineGraph/index.tsx","components/StyledElems/index.tsx","components/DotsCheckboxGroup/index.tsx","components/App/index.tsx","index.tsx"],"names":["f","x","Math","sin","sqrt","LagrangeGraph","points","baseFunc","lagrangeFunc","n","length","basisFuncs","i","PI","yL","j","yB","k","push","y","lagrangeFuncs","maxDomain","minDomain","theme","VictoryTheme","material","containerComponent","responsive","width","height","orientation","gutter","data","name","symbol","fill","labels","animate","duration","style","stroke","diff","dots","slice","newtonPolynomial","res","omega","NewtonGraph","newtonFunc","newtonFuncs","H","a","b","c","d","h","m","coefficients","s","t","cubicPolynomial","getPointsOfPolynomial","index","round","SplineGraph","splineFunc","splineFuncs","GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","dotsDict","h05","h15","h25","h45","h65","DotsCheckboxGroup","setDots","handleChange","event","target","FormGroup","row","Object","keys","map","key","FormControlLabel","control","onChange","label","useStyles","makeStyles","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","App","useState","value","classes","filter","className","Typography","variant","gutterBottom","Grid","container","wrap","item","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90812553.chunk.js","sourcesContent":["import { Dots } from '../../types';\r\n\r\nconst H = Math.PI / 7;\r\n\r\nconst points = [0, 0.5 * H, 1.5 * H, 2.5 * H, 4.5 * H, 6.5 * H, 7 * H];\r\n\r\nconst n = points.length;\r\n\r\nconst f = (x: number) => {\r\n  return Math.sin(x) * Math.sqrt(x) + 1;\r\n};\r\n\r\nconst a = [0];\r\nconst b = [0];\r\nconst c = [0];\r\nconst d = [0];\r\nconst h = [0];\r\n\r\nfor (let i = 1; i < n; i += 1) {\r\n  h[i] = points[i] - points[i - 1];\r\n}\r\n\r\nfor (let i = 1; i < n - 1; i += 1) {\r\n  a[i] = h[i] / (h[i] + h[i + 1]);\r\n}\r\n\r\nfor (let i = 1; i < n - 1; i += 1) {\r\n  b[i] = -2;\r\n}\r\n\r\nfor (let i = 1; i < n - 1; i += 1) {\r\n  c[i] = h[i + 1] / (h[i] + h[i + 1]);\r\n}\r\n\r\nfor (let i = 1; i < n - 1; i += 1) {\r\n  d[i] =\r\n    (6 *\r\n      ((f(points[i + 1]) - f(points[i])) / h[i + 1] -\r\n        (f(points[i]) - f(points[i - 1])) / h[i])) /\r\n    (points[i + 1] - points[i - 1]);\r\n}\r\n\r\nconst m = [0];\r\nconst coefficients = [\r\n  { s: 0, t: 0 },\r\n  { s: c[1] / b[1], t: -d[1] / b[1] },\r\n];\r\n\r\nfor (let i = 2; i < n - 1; i += 1) {\r\n  coefficients[i] = {\r\n    s: c[i] / (b[i] - coefficients[i - 1].s),\r\n    t:\r\n      (a[i] * coefficients[i - 1].t - d[i]) /\r\n      (b[i] - coefficients[i - 1].s * a[i]),\r\n  };\r\n}\r\n\r\n// нахождение корней, прогонка в обратном направлении\r\n\r\nfor (let i = n - 2; i > 0; i -= 1) {\r\n  if (i === n - 2) {\r\n    m[i + 1] = 0;\r\n    m[i] = coefficients[i].t;\r\n  } else {\r\n    m[i] = coefficients[i].s * m[i + 1] + coefficients[i].t;\r\n  }\r\n}\r\n\r\n// функция кубического многочлена\r\nfunction cubicPolynomial(x: number, i: number) {\r\n  // i = 1,2 ... n\r\n  return (\r\n    (m[i - 1] * (points[i] - x) ** 3) / (6 * h[i]) +\r\n    (m[i] * (-points[i - 1] + x) ** 3) / (6 * h[i]) +\r\n    (f(points[i - 1]) - (m[i - 1] * h[i] * h[i]) / 6) *\r\n      ((points[i] - x) / h[i]) +\r\n    (f(points[i]) - (m[i] * h[i] * h[i]) / 6) * ((-points[i - 1] + x) / h[i])\r\n  );\r\n}\r\n\r\n// получение массива точек для постоения графика\r\nfunction getPointsOfPolynomial(index: number) {\r\n  const res = [];\r\n  for (\r\n    let i = Math.round(points[index - 1] * 20);\r\n    i <= Math.round(points[index] * 20);\r\n    i += 1\r\n  ) {\r\n    const x = i / 20;\r\n    res.push({\r\n      x,\r\n      y: cubicPolynomial(x, index),\r\n    });\r\n  }\r\n  return res;\r\n}\r\n\r\nexport const spline = [];\r\n\r\nexport default (): { baseFunc: Dots; splineFunc: Dots } => {\r\n  const baseFunc: Dots = [];\r\n  let splineFunc: Dots = [];\r\n\r\n  for (let i = 1; i < n; i += 1) {\r\n    splineFunc = [...splineFunc, ...getPointsOfPolynomial(i)];\r\n  }\r\n\r\n  for (let i = 0; i < 256; i += 1) {\r\n    const x = i / 40;\r\n    baseFunc.push({\r\n      x,\r\n      y: f(x),\r\n    });\r\n  }\r\n\r\n  return {\r\n    baseFunc,\r\n    splineFunc,\r\n  };\r\n};\r\n","import { Dots } from '../../types';\r\n\r\nconst f = (x: number) => {\r\n  return Math.sin(x) * Math.sqrt(x) + 1;\r\n};\r\n\r\nexport default (\r\n  points: number[],\r\n): { baseFunc: Dots; lagrangeFunc: Dots; basisFuncs: Dots[] } => {\r\n  const baseFunc: Dots = [];\r\n  const lagrangeFunc: Dots = [];\r\n  const n = points.length;\r\n  const basisFuncs: Dots[] = [[], [], [], [], []];\r\n\r\n  for (let i = 0; i < 500; i += 1) {\r\n    const x = (i * Math.PI) / 100; // вычисление по точке от начала координат реальной координаты}\r\n    let yL = 0;\r\n    for (let j = 0; j < n; j += 1) {\r\n      let yB = 1;\r\n      for (let k = 0; k < n; k += 1) {\r\n        if (j !== k) {\r\n          yB = (yB * (x - points[k])) / (points[j] - points[k]); // базисные вещи\r\n        }\r\n      }\r\n      basisFuncs[j].push({\r\n        x,\r\n        y: yB,\r\n      });\r\n\r\n      yL += yB * f(points[j]);\r\n    }\r\n    baseFunc.push({\r\n      x,\r\n      y: f(x),\r\n    });\r\n    lagrangeFunc.push({\r\n      x,\r\n      y: yL,\r\n    }); // трисовка базисных функций}\r\n  }\r\n  return {\r\n    baseFunc,\r\n    lagrangeFunc,\r\n    basisFuncs,\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  VictoryChart,\r\n  VictoryLine,\r\n  VictoryTheme,\r\n  VictoryContainer,\r\n  VictoryLegend,\r\n} from 'victory';\r\nimport lagrangeFuncs from './lagrangeFuncs';\r\n\r\ntype Props = {\r\n  points: number[];\r\n};\r\n\r\nconst LagrangeGraph: React.FC<Props> = ({ points }) => {\r\n  const { lagrangeFunc, basisFuncs, baseFunc } = lagrangeFuncs(points);\r\n\r\n  return (\r\n    <>\r\n      <VictoryChart\r\n        maxDomain={{ x: 8, y: 8 }}\r\n        minDomain={{ x: 0, y: -8 }}\r\n        theme={VictoryTheme.material}\r\n        containerComponent={<VictoryContainer responsive={false} />}\r\n        width={800}\r\n        height={800}\r\n      >\r\n        <VictoryLegend\r\n          x={50}\r\n          y={50}\r\n          orientation=\"vertical\"\r\n          gutter={20}\r\n          data={[\r\n            {\r\n              name: 'График функции',\r\n              symbol: { fill: 'red' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'График интерполяционного многочлена',\r\n              symbol: { fill: 'green' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'Базисная функция 1',\r\n              symbol: { fill: '#FF7F50' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'Базисная функция 2',\r\n              symbol: { fill: '#FFB6C1' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'Базисная функция 3',\r\n              symbol: { fill: '#CD853F' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'Базисная функция 4',\r\n              symbol: { fill: 'maroon' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'Базисная функция 5',\r\n              symbol: { fill: '#008B8B' },\r\n              labels: { fill: 'black' },\r\n            },\r\n          ]}\r\n        />\r\n        <VictoryLine\r\n          data={baseFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'red',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={lagrangeFunc}\r\n          animate={{\r\n            duration: 1500,\r\n          }}\r\n          style={{\r\n            data: {\r\n              stroke: 'green',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={basisFuncs[0]}\r\n          animate={{\r\n            duration: 1500,\r\n          }}\r\n          style={{\r\n            data: {\r\n              stroke: '#FF7F50',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={basisFuncs[1]}\r\n          animate={{\r\n            duration: 1500,\r\n          }}\r\n          style={{\r\n            data: {\r\n              stroke: '#FFB6C1',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={basisFuncs[2]}\r\n          animate={{\r\n            duration: 1500,\r\n          }}\r\n          style={{\r\n            data: {\r\n              stroke: '#CD853F',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={basisFuncs[3]}\r\n          animate={{\r\n            duration: 1500,\r\n          }}\r\n          style={{\r\n            data: {\r\n              stroke: 'maroon',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={basisFuncs[4]}\r\n          animate={{\r\n            duration: 1500,\r\n          }}\r\n          style={{\r\n            data: {\r\n              stroke: '#008B8B',\r\n            },\r\n          }}\r\n        />\r\n      </VictoryChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LagrangeGraph;\r\n","import { Dots } from '../../types';\r\n\r\nconst f = (x: number) => {\r\n  return Math.sin(x) * Math.sqrt(x) + 1;\r\n};\r\n\r\nconst diff = (dots: number[]): number => {\r\n  if (dots.length > 2) {\r\n    return (\r\n      (diff(dots.slice(1)) - diff(dots.slice(0, dots.length - 1))) /\r\n      (dots[dots.length - 1] - dots[0])\r\n    );\r\n  }\r\n  if (dots.length === 2) return (f(dots[1]) - f(dots[0])) / (dots[1] - dots[0]);\r\n  return 0;\r\n};\r\n\r\nconst newtonPolynomial = (x: number, points: number[]) => {\r\n  let res = f(points[0]);\r\n  let omega = 1;\r\n\r\n  for (let i = 1; i < points.length; i += 1) {\r\n    omega *= x - points[i - 1];\r\n    res += diff(points.slice(0, i + 1)) * omega;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport default (points: number[]): { baseFunc: Dots; newtonFunc: Dots } => {\r\n  const baseFunc: Dots = [];\r\n  const newtonFunc: Dots = [];\r\n\r\n  for (let i = 0; i < 256; i += 1) {\r\n    const x = i / 40;\r\n    newtonFunc.push({\r\n      x,\r\n      y: newtonPolynomial(x, points),\r\n    });\r\n    baseFunc.push({\r\n      x,\r\n      y: f(x),\r\n    });\r\n  }\r\n\r\n  return {\r\n    baseFunc,\r\n    newtonFunc,\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  VictoryChart,\r\n  VictoryLine,\r\n  VictoryTheme,\r\n  VictoryContainer,\r\n  VictoryLegend,\r\n} from 'victory';\r\nimport newtonFuncs from './newtonFuncs';\r\n\r\ntype Props = {\r\n  points: number[];\r\n};\r\n\r\nconst NewtonGraph: React.FC<Props> = ({ points }) => {\r\n  const { newtonFunc, baseFunc } = newtonFuncs(points);\r\n\r\n  return (\r\n    <>\r\n      <VictoryChart\r\n        maxDomain={{ x: 8, y: 8 }}\r\n        minDomain={{ x: 0, y: -8 }}\r\n        theme={VictoryTheme.material}\r\n        containerComponent={<VictoryContainer responsive={false} />}\r\n        width={800}\r\n        height={800}\r\n      >\r\n        <VictoryLegend\r\n          x={50}\r\n          y={50}\r\n          orientation=\"vertical\"\r\n          gutter={20}\r\n          data={[\r\n            {\r\n              name: 'График функции',\r\n              symbol: { fill: 'red' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'График интерполяционного многочлена',\r\n              symbol: { fill: 'blue' },\r\n              labels: { fill: 'black' },\r\n            },\r\n          ]}\r\n        />\r\n        <VictoryLine\r\n          data={baseFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'red',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={newtonFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'blue',\r\n            },\r\n          }}\r\n        />\r\n      </VictoryChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewtonGraph;\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  VictoryChart,\r\n  VictoryLine,\r\n  VictoryTheme,\r\n  VictoryContainer,\r\n  VictoryLegend,\r\n} from 'victory';\r\nimport splineFuncs from './splineFuncs';\r\n\r\nconst SplineGraph: React.FC = () => {\r\n  const { splineFunc, baseFunc } = splineFuncs();\r\n\r\n  return (\r\n    <>\r\n      <VictoryChart\r\n        maxDomain={{ x: 8, y: 8 }}\r\n        minDomain={{ x: 0, y: -8 }}\r\n        theme={VictoryTheme.material}\r\n        containerComponent={<VictoryContainer responsive={false} />}\r\n        width={800}\r\n        height={800}\r\n      >\r\n        <VictoryLegend\r\n          x={50}\r\n          y={50}\r\n          orientation=\"vertical\"\r\n          gutter={20}\r\n          data={[\r\n            {\r\n              name: 'График функции',\r\n              symbol: { fill: 'red' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'График интерполяционного многочлена',\r\n              symbol: { fill: 'blue' },\r\n              labels: { fill: 'black' },\r\n            },\r\n          ]}\r\n        />\r\n        <VictoryLine\r\n          data={baseFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'red',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={splineFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'blue',\r\n            },\r\n          }}\r\n        />\r\n      </VictoryChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SplineGraph;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n","import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { GreenCheckbox } from '../StyledElems';\r\nimport { MainDots, MainDotsKeys } from '../../types';\r\n\r\nconst dotsDict: Record<MainDotsKeys, string> = {\r\n  h05: '0.5 * h',\r\n  h15: '1.5 * h',\r\n  h25: '2.5 * h',\r\n  h45: '4.5 * h',\r\n  h65: '6.5 * h',\r\n};\r\n\r\ntype Props = {\r\n  dots: MainDots;\r\n  setDots: React.Dispatch<React.SetStateAction<MainDots>>;\r\n};\r\n\r\nconst DotsCheckboxGroup: React.FC<Props> = ({ dots, setDots }) => {\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDots({\r\n      ...dots,\r\n      [event.target.name]: {\r\n        ...dots[event.target.name as MainDotsKeys],\r\n        checked: event.target.checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      {Object.keys(dots).map((key: string) => (\r\n        <FormControlLabel\r\n          control={\r\n            <GreenCheckbox\r\n              checked={dots[key as MainDotsKeys].checked as boolean}\r\n              onChange={handleChange}\r\n              name={key}\r\n            />\r\n          }\r\n          label={dotsDict[key as MainDotsKeys]}\r\n        />\r\n      ))}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default DotsCheckboxGroup;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MainDots } from '../../types';\r\nimport LagrangeGraph from '../LagrangeGraph';\r\nimport NewtonGraph from '../NewtonGraph';\r\nimport SplineGraph from '../SplineGraph';\r\n\r\nimport DotsCheckboxGroup from '../DotsCheckboxGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 800,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst h = Math.PI / 7;\r\n\r\nconst App: React.FC = () => {\r\n  const [dots, setDots] = useState<MainDots>({\r\n    h05: { checked: true, value: 0.5 * h },\r\n    h15: { checked: true, value: 1.5 * h },\r\n    h25: { checked: true, value: 2.5 * h },\r\n    h45: { checked: true, value: 4.5 * h },\r\n    h65: { checked: true, value: 6.5 * h },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const points = Object.keys(dots)\r\n    .filter((key: string) => dots[key as keyof MainDots].checked)\r\n    .map((key: string) => dots[key as keyof MainDots].value);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.paper}>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Интерполяция сплайнами\r\n        </Typography>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item xs>\r\n            <SplineGraph />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.paper}>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Интерполяция Ньютона\r\n        </Typography>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item xs>\r\n            <Typography>\r\n              Выберите точки через которые проходит интерполяционный многочлен\r\n            </Typography>\r\n            <DotsCheckboxGroup dots={dots} setDots={setDots} />\r\n            <NewtonGraph points={points} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.paper}>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Интерполяция Лагранжа\r\n        </Typography>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item xs>\r\n            <Typography>\r\n              Выберите точки через которые проходит интерполяционный многочлен\r\n            </Typography>\r\n            <DotsCheckboxGroup dots={dots} setDots={setDots} />\r\n            <LagrangeGraph points={points} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}