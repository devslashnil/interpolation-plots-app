{"version":3,"sources":["components/NewtonGraph/newtonFuncs.ts","components/NewtonGraph/index.tsx","components/App/index.tsx","index.tsx"],"names":["f","x","Math","sin","sqrt","diff","dots","length","slice","newtonPolynomial","points","res","omega","i","NewtonGraph","baseFunc","newtonFunc","push","y","newtonFuncs","maxDomain","minDomain","theme","VictoryTheme","material","containerComponent","responsive","width","height","orientation","gutter","data","name","symbol","fill","labels","animate","duration","style","stroke","useStyles","makeStyles","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","h","PI","App","useState","h05","checked","value","h15","h25","h45","h65","classes","Object","keys","filter","key","map","className","Typography","variant","gutterBottom","Grid","container","wrap","item","xl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAEMA,EAAI,SAACC,GACT,OAAOC,KAAKC,IAAIF,GAAKC,KAAKE,KAAKH,GAAK,GAGhCI,EAAO,SAAPA,EAAQC,GACZ,OAAIA,EAAKC,OAAS,GAEbF,EAAKC,EAAKE,MAAM,IAAMH,EAAKC,EAAKE,MAAM,EAAGF,EAAKC,OAAS,MACvDD,EAAKA,EAAKC,OAAS,GAAKD,EAAK,IAGd,IAAhBA,EAAKC,QAAsBP,EAAEM,EAAK,IAAMN,EAAEM,EAAK,MAAQA,EAAK,GAAKA,EAAK,IACnE,GAGHG,EAAmB,SAACR,EAAWS,GAInC,IAHA,IAAIC,EAAMX,EAAEU,EAAO,IACfE,EAAQ,EAEHC,EAAI,EAAGA,EAAIH,EAAOH,OAAQM,GAAK,EACtCD,GAASX,EAAIS,EAAOG,EAAI,GACxBF,GAAON,EAAKK,EAAOF,MAAM,EAAGK,EAAI,IAAMD,EAGxC,OAAOD,GC0CMG,EAtDsB,SAAC,GAAgB,IAAD,EDetC,SAACJ,GAId,IAHA,IAAMK,EAAiB,GACjBC,EAAmB,GAEhBH,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B,IAAMZ,EAAIY,EAAI,GACdG,EAAWC,KAAK,CACdhB,IACAiB,EAAGT,EAAiBR,EAAGS,KAEzBK,EAASE,KAAK,CACZhB,IACAiB,EAAGlB,EAAEC,KAIT,MAAO,CACLc,WACAC,cChC+BG,CADkB,EAAbT,QAC9BM,EAD2C,EAC3CA,WAAYD,EAD+B,EAC/BA,SAEpB,OACE,mCACE,eAAC,IAAD,CACEK,UAAW,CAAEnB,EAAG,EAAGiB,EAAG,GACtBG,UAAW,CAAEpB,EAAG,EAAGiB,GAAI,GACvBI,MAAOC,IAAaC,SACpBC,mBAAoB,cAAC,IAAD,CAAkBC,YAAY,IAClDC,MAAO,IACPC,OAAQ,IANV,UAQE,cAAC,IAAD,CACE3B,EAAG,GACHiB,EAAG,GACHW,YAAY,WACZC,OAAQ,GACRC,KAAM,CACJ,CACEC,KAAM,kFACNC,OAAQ,CAAEC,KAAM,OAChBC,OAAQ,CAAED,KAAM,UAElB,CACEF,KAAM,2MACNC,OAAQ,CAAEC,KAAM,QAChBC,OAAQ,CAAED,KAAM,aAItB,cAAC,IAAD,CACEH,KAAMhB,EACNqB,QAAS,CAAEC,SAAU,MACrBC,MAAO,CACLP,KAAM,CACJQ,OAAQ,UAId,cAAC,IAAD,CACER,KAAMf,EACNoB,QAAS,CAAEC,SAAU,MACrBC,MAAO,CACLP,KAAM,CACJQ,OAAQ,iBChDhBC,EAAYC,aAAW,SAACnB,GAAD,MAAY,CACvCoB,KAAM,CACJC,SAAU,EACVC,SAAU,SACVC,QAASvB,EAAMwB,QAAQ,EAAG,IAE5BC,MAAO,CACLC,SAAU,IACVC,OAAO,GAAD,OAAK3B,EAAMwB,QAAQ,GAAnB,WACND,QAASvB,EAAMwB,QAAQ,QAIrBI,EAAIhD,KAAKiD,GAAK,EA2ELC,EAzEO,WAAO,IAAD,EACFC,mBAAmB,CACzCC,IAAK,CAAEC,SAAS,EAAMC,MAAO,GAAMN,GACnCO,IAAK,CAAEF,SAAS,EAAMC,MAAO,IAAMN,GACnCQ,IAAK,CAAEH,SAAS,EAAMC,MAAO,IAAMN,GACnCS,IAAK,CAAEJ,SAAS,EAAMC,MAAO,IAAMN,GACnCU,IAAK,CAAEL,SAAS,EAAMC,MAAO,IAAMN,KANX,mBACnB5C,EADmB,KAQpBuD,GARoB,KAQVrB,KAEDsB,OAAOC,KAAKzD,GACxB0D,QAAO,SAACC,GAAD,OAAiB3D,EAAK2D,GAAuBV,WACpDW,KAAI,SAACD,GAAD,OAAiB3D,EAAK2D,GAAuBT,SAEpD,OACE,qBAAKW,UAAWN,EAAQnB,KAAxB,SAWE,sBAAKyB,UAAWN,EAAQd,MAAxB,UACE,cAACqB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,iIAGA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,OAAO3B,QAAS,EAArC,UACE,eAACyB,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,UACE,cAACP,EAAA,EAAD,mDACA,cAAC,EAAD,CAAa1D,OAAQ,CAAC,GAAMwC,QAE9B,eAACqB,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,UACE,cAACP,EAAA,EAAD,yDACA,cAAC,EAAD,CAAa1D,OAAQ,CAAC,GAAMwC,EAAG,IAAMA,QAEvC,eAACqB,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,UACE,cAACP,EAAA,EAAD,+DACA,cAAC,EAAD,CAAa1D,OAAQ,CAAC,GAAMwC,EAAG,IAAMA,EAAG,IAAMA,QAEhD,eAACqB,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,UACE,cAACP,EAAA,EAAD,qEACA,cAAC,EAAD,CAAa1D,OAAQ,CAAC,GAAMwC,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,QAEzD,eAACqB,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,UACE,cAACP,EAAA,EAAD,2EACA,cAAC,EAAD,CACE1D,OAAQ,CAAC,GAAMwC,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,iBCxEjE0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.97e5f417.chunk.js","sourcesContent":["import { Dots } from '../../types';\r\n\r\nconst f = (x: number) => {\r\n  return Math.sin(x) * Math.sqrt(x) + 1;\r\n};\r\n\r\nconst diff = (dots: number[]): number => {\r\n  if (dots.length > 2) {\r\n    return (\r\n      (diff(dots.slice(1)) - diff(dots.slice(0, dots.length - 1))) /\r\n      (dots[dots.length - 1] - dots[0])\r\n    );\r\n  }\r\n  if (dots.length === 2) return (f(dots[1]) - f(dots[0])) / (dots[1] - dots[0]);\r\n  return 0;\r\n};\r\n\r\nconst newtonPolynomial = (x: number, points: number[]) => {\r\n  let res = f(points[0]);\r\n  let omega = 1;\r\n\r\n  for (let i = 1; i < points.length; i += 1) {\r\n    omega *= x - points[i - 1];\r\n    res += diff(points.slice(0, i + 1)) * omega;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport default (points: number[]): { baseFunc: Dots; newtonFunc: Dots } => {\r\n  const baseFunc: Dots = [];\r\n  const newtonFunc: Dots = [];\r\n\r\n  for (let i = 0; i < 256; i += 1) {\r\n    const x = i / 40;\r\n    newtonFunc.push({\r\n      x,\r\n      y: newtonPolynomial(x, points),\r\n    });\r\n    baseFunc.push({\r\n      x,\r\n      y: f(x),\r\n    });\r\n  }\r\n\r\n  return {\r\n    baseFunc,\r\n    newtonFunc,\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  VictoryChart,\r\n  VictoryLine,\r\n  VictoryTheme,\r\n  VictoryContainer,\r\n  VictoryLegend,\r\n} from 'victory';\r\nimport newtonFuncs from './newtonFuncs';\r\n\r\ntype Props = {\r\n  points: number[];\r\n};\r\n\r\nconst NewtonGraph: React.FC<Props> = ({ points }) => {\r\n  const { newtonFunc, baseFunc } = newtonFuncs(points);\r\n\r\n  return (\r\n    <>\r\n      <VictoryChart\r\n        maxDomain={{ x: 8, y: 8 }}\r\n        minDomain={{ x: 0, y: -8 }}\r\n        theme={VictoryTheme.material}\r\n        containerComponent={<VictoryContainer responsive={false} />}\r\n        width={800}\r\n        height={800}\r\n      >\r\n        <VictoryLegend\r\n          x={50}\r\n          y={50}\r\n          orientation=\"vertical\"\r\n          gutter={20}\r\n          data={[\r\n            {\r\n              name: 'График функции',\r\n              symbol: { fill: 'red' },\r\n              labels: { fill: 'black' },\r\n            },\r\n            {\r\n              name: 'График интерполяционного многочлена',\r\n              symbol: { fill: 'blue' },\r\n              labels: { fill: 'black' },\r\n            },\r\n          ]}\r\n        />\r\n        <VictoryLine\r\n          data={baseFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'red',\r\n            },\r\n          }}\r\n        />\r\n        <VictoryLine\r\n          data={newtonFunc}\r\n          animate={{ duration: 1500 }}\r\n          style={{\r\n            data: {\r\n              stroke: 'blue',\r\n            },\r\n          }}\r\n        />\r\n      </VictoryChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewtonGraph;\r\n","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MainDots } from '../../types';\r\nimport LagrangeGraph from '../LagrangeGraph';\r\nimport NewtonGraph from '../NewtonGraph';\r\nimport SplineGraph from '../SplineGraph';\r\n\r\nimport DotsCheckboxGroup from '../DotsCheckboxGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 800,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst h = Math.PI / 7;\r\n\r\nconst App: React.FC = () => {\r\n  const [dots, setDots] = useState<MainDots>({\r\n    h05: { checked: true, value: 0.5 * h },\r\n    h15: { checked: true, value: 1.5 * h },\r\n    h25: { checked: true, value: 2.5 * h },\r\n    h45: { checked: true, value: 4.5 * h },\r\n    h65: { checked: true, value: 6.5 * h },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const points = Object.keys(dots)\r\n    .filter((key: string) => dots[key as keyof MainDots].checked)\r\n    .map((key: string) => dots[key as keyof MainDots].value);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <div className={classes.paper}>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Интерполяция сплайнами\r\n        </Typography>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item xs>\r\n            <SplineGraph />\r\n          </Grid>\r\n        </Grid>\r\n      </div> */}\r\n      <div className={classes.paper}>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Интерполяция Ньютона\r\n        </Typography>\r\n        <Grid container wrap=\"wrap\" spacing={2}>\r\n          <Grid item xl>\r\n            <Typography>Точки: 0.5h</Typography>\r\n            <NewtonGraph points={[0.5 * h]} />\r\n          </Grid>\r\n          <Grid item xl>\r\n            <Typography>Точки: 0.5h, 2.5h</Typography>\r\n            <NewtonGraph points={[0.5 * h, 2.5 * h]} />\r\n          </Grid>\r\n          <Grid item xl>\r\n            <Typography>Точки: 0.5h, 2.5h, 6.5h</Typography>\r\n            <NewtonGraph points={[0.5 * h, 2.5 * h, 6.5 * h]} />\r\n          </Grid>\r\n          <Grid item xl>\r\n            <Typography>Точки: 0.5h, 2.5h, 6.5h, 4.5h</Typography>\r\n            <NewtonGraph points={[0.5 * h, 2.5 * h, 6.5 * h, 4.5 * h]} />\r\n          </Grid>\r\n          <Grid item xl>\r\n            <Typography>Точки: 0.5h, 2.5h, 6.5h, 4.5h, 1.5h</Typography>\r\n            <NewtonGraph\r\n              points={[0.5 * h, 2.5 * h, 6.5 * h, 4.5 * h, 1.5 * h]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {/* <div className={classes.paper}>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          Интерполяция Лагранжа\r\n        </Typography>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item xs>\r\n            <Typography>\r\n              Выберите точки через которые проходит интерполяционный многочлен\r\n            </Typography>\r\n            <DotsCheckboxGroup dots={dots} setDots={setDots} />\r\n            <LagrangeGraph points={points} />\r\n          </Grid>\r\n        </Grid>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}