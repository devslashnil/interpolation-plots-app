{"version":3,"sources":["components/LagrangeGraph/lagrangeFuncs.ts","components/LagrangeGraph/index.tsx","components/StyledElems/index.tsx","components/DotsCheckboxGroup/index.tsx","components/App/index.tsx","index.tsx"],"names":["f","x","Math","sin","sqrt","LagrangeGraph","points","baseFunc","lagrangeFunc","n","length","basisFuncs","i","PI","yL","j","yB","k","push","y","lagrangeFuncs","maxDomain","minDomain","theme","VictoryTheme","material","containerComponent","responsive","width","height","orientation","gutter","data","name","symbol","fill","labels","animate","duration","style","stroke","GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","dotsDict","h05","h15","h25","h45","h65","DotsCheckboxGroup","dots","setDots","handleChange","event","target","FormGroup","row","Object","keys","map","key","FormControlLabel","control","onChange","label","useStyles","makeStyles","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","h","App","useState","value","classes","filter","className","Typography","variant","gutterBottom","Grid","container","wrap","item","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bd7ae8f.chunk.js","sourcesContent":["import { Dots } from '../../types';\n\nconst f = (x: number) => {\n  return Math.sin(x) * Math.sqrt(x) + 1;\n};\n\nexport default (\n  points: number[],\n): { baseFunc: Dots; lagrangeFunc: Dots; basisFuncs: Dots[] } => {\n  const baseFunc: Dots = [];\n  const lagrangeFunc: Dots = [];\n  const n = points.length;\n  const basisFuncs: Dots[] = [[], [], [], [], []];\n\n  for (let i = 0; i < 500; i += 1) {\n    const x = (i * Math.PI) / 100; // вычисление по точке от начала координат реальной координаты}\n    let yL = 0;\n    for (let j = 0; j < n; j += 1) {\n      let yB = 1;\n      for (let k = 0; k < n; k += 1) {\n        if (j !== k) {\n          yB = (yB * (x - points[k])) / (points[j] - points[k]); // базисные вещи\n        }\n      }\n      basisFuncs[j].push({\n        x,\n        y: yB,\n      });\n\n      yL += yB * f(points[j]);\n    }\n    baseFunc.push({\n      x,\n      y: f(x),\n    });\n    lagrangeFunc.push({\n      x,\n      y: yL,\n    }); // трисовка базисных функций}\n  }\n  return {\n    baseFunc,\n    lagrangeFunc,\n    basisFuncs,\n  };\n};\n","import React, { Fragment } from 'react';\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryTheme,\n  VictoryContainer,\n  VictoryLegend,\n} from 'victory';\nimport lagrangeFuncs from './lagrangeFuncs';\n\ntype Props = {\n  points: number[];\n};\n\nconst LagrangeGraph: React.FC<Props> = ({ points }) => {\n  const { lagrangeFunc, basisFuncs, baseFunc } = lagrangeFuncs(points);\n\n  return (\n    <>\n      <VictoryChart\n        maxDomain={{ x: 8, y: 8 }}\n        minDomain={{ x: 0, y: -8 }}\n        theme={VictoryTheme.material}\n        containerComponent={<VictoryContainer responsive={false} />}\n        width={800}\n        height={800}\n      >\n        <VictoryLegend\n          x={50}\n          y={50}\n          orientation=\"vertical\"\n          gutter={20}\n          data={[\n            {\n              name: 'График функции',\n              symbol: { fill: 'red' },\n              labels: { fill: 'black' },\n            },\n            {\n              name: 'График интерполяционного многочлена',\n              symbol: { fill: 'green' },\n              labels: { fill: 'black' },\n            },\n            {\n              name: 'Базисная функция 1',\n              symbol: { fill: '#FF7F50' },\n              labels: { fill: 'black' },\n            },\n            {\n              name: 'Базисная функция 2',\n              symbol: { fill: '#FFB6C1' },\n              labels: { fill: 'black' },\n            },\n            {\n              name: 'Базисная функция 3',\n              symbol: { fill: '#CD853F' },\n              labels: { fill: 'black' },\n            },\n            {\n              name: 'Базисная функция 4',\n              symbol: { fill: 'maroon' },\n              labels: { fill: 'black' },\n            },\n            {\n              name: 'Базисная функция 5',\n              symbol: { fill: '#008B8B' },\n              labels: { fill: 'black' },\n            },\n          ]}\n        />\n        <VictoryLine\n          data={baseFunc}\n          animate={{ duration: 1500 }}\n          style={{\n            data: {\n              stroke: 'red',\n            },\n          }}\n        />\n        <VictoryLine\n          data={lagrangeFunc}\n          animate={{\n            duration: 1500,\n          }}\n          style={{\n            data: {\n              stroke: 'green',\n            },\n          }}\n        />\n        <VictoryLine\n          data={basisFuncs[0]}\n          animate={{\n            duration: 1500,\n          }}\n          style={{\n            data: {\n              stroke: '#FF7F50',\n            },\n          }}\n        />\n        <VictoryLine\n          data={basisFuncs[1]}\n          animate={{\n            duration: 1500,\n          }}\n          style={{\n            data: {\n              stroke: '#FFB6C1',\n            },\n          }}\n        />\n        <VictoryLine\n          data={basisFuncs[2]}\n          animate={{\n            duration: 1500,\n          }}\n          style={{\n            data: {\n              stroke: '#CD853F',\n            },\n          }}\n        />\n        <VictoryLine\n          data={basisFuncs[3]}\n          animate={{\n            duration: 1500,\n          }}\n          style={{\n            data: {\n              stroke: 'maroon',\n            },\n          }}\n        />\n        <VictoryLine\n          data={basisFuncs[4]}\n          animate={{\n            duration: 1500,\n          }}\n          style={{\n            data: {\n              stroke: '#008B8B',\n            },\n          }}\n        />\n      </VictoryChart>\n    </>\n  );\n};\n\nexport default LagrangeGraph;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { GreenCheckbox } from '../StyledElems';\nimport { MainDots, MainDotsKeys } from '../../types';\n\nconst dotsDict: Record<MainDotsKeys, string> = {\n  h05: '0.5 * h',\n  h15: '1.5 * h',\n  h25: '2.5 * h',\n  h45: '4.5 * h',\n  h65: '6.5 * h',\n};\n\ntype Props = {\n  dots: MainDots;\n  setDots: React.Dispatch<React.SetStateAction<MainDots>>;\n};\n\nconst DotsCheckboxGroup: React.FC<Props> = ({ dots, setDots }) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDots({\n      ...dots,\n      [event.target.name]: {\n        ...dots[event.target.name as MainDotsKeys],\n        checked: event.target.checked,\n      },\n    });\n  };\n\n  return (\n    <FormGroup row>\n      {Object.keys(dots).map((key: string) => (\n        <FormControlLabel\n          control={\n            <GreenCheckbox\n              checked={dots[key as MainDotsKeys].checked as boolean}\n              onChange={handleChange}\n              name={key}\n            />\n          }\n          label={dotsDict[key as MainDotsKeys]}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n\nexport default DotsCheckboxGroup;\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MainDots } from '../../types';\nimport LagrangeGraph from '../LagrangeGraph';\n\nimport DotsCheckboxGroup from '../DotsCheckboxGroup';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 800,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\nconst h = Math.PI / 7;\n\nconst App: React.FC = () => {\n  const [dots, setDots] = useState<MainDots>({\n    h05: { checked: true, value: 0.5 * h },\n    h15: { checked: true, value: 1.5 * h },\n    h25: { checked: true, value: 2.5 * h },\n    h45: { checked: true, value: 4.5 * h },\n    h65: { checked: true, value: 6.5 * h },\n  });\n  const classes = useStyles();\n\n  const points = Object.keys(dots)\n    .filter((key: string) => dots[key as keyof MainDots].checked)\n    .map((key: string) => dots[key as keyof MainDots].value);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.paper}>\n        <Typography variant=\"h3\" gutterBottom>\n          Интерполяция Лагранжа\n        </Typography>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item xs>\n            <Typography>\n              Выберите точки через которые проходит интерполяционный многочлен\n            </Typography>\n            <DotsCheckboxGroup dots={dots} setDots={setDots} />\n            <LagrangeGraph points={points} />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}